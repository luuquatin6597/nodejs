<div class="product-item">
    <!-- Toast container -->
    <div id="toast" class="toast"></div>
    
    <div class="pi-pic">
        <img src="/img/products/product-<%= product.id %>.jpg" alt="">
        <% if(product.isSale) { %>
        <div class="sale pp-sale">Sale</div>
        <% } %>
        <div class="icon">
            <i class="icon_heart_alt"></i>
        </div>
        <ul>
            <li class="w-icon active">
                <a href="#" class="add-to-cart" 
                   data-id="<%= product.id %>"
                   data-name="<%= product.name %>"
                   data-price="<%= product.price %>"
                   data-image="product-<%= product.id %>.jpg">
                    <i class="icon_bag_alt"></i>
                </a>
            </li>
            <li class="quick-view">
                <a href="#" class="add-to-cart"
                   data-id="<%= product.id %>"
                   data-name="<%= product.name %>"
                   data-price="<%= product.price %>"
                   data-image="product-<%= product.id %>.jpg">
                    + Add Cart
                </a>
            </li>
            <li class="w-icon"><a href="#"><i class="fa fa-random"></i></a></li>
        </ul>
    </div>
    <div class="pi-text">
        <div class="catagory-name"><%= product.category %></div>
        <a href="/product/<%= product.id %>">
            <h5><%= product.name %></h5>
        </a>
        <div class="product-price">
            ₫<%= product.price %>.00
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const addToCartButtons = document.querySelectorAll('.add-to-cart');
    let isAddingToCart = false; // Flag to prevent multiple clicks
    
    // Function to show toast
    function showToast(message, type = 'success') {
        const toast = document.getElementById('toast');
        toast.textContent = message;
        toast.className = `toast ${type}`;
        toast.style.display = 'block';
        
        // Auto hide after 5 seconds (increased from 3)
        setTimeout(() => {
            toast.style.display = 'none';
        }, 5000);
    }
    
    addToCartButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            
            // Prevent multiple clicks
            if (isAddingToCart) return;
            isAddingToCart = true;
            
            const productData = {
                id: this.dataset.id,
                name: this.dataset.name,
                price: this.dataset.price,
                image: this.dataset.image
            };
            
            fetch('/api/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(productData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Cập nhật số lượng sản phẩm trong giỏ hàng
                    const cartCount = document.querySelector('.cart-icon span');
                    if (cartCount) {
                        cartCount.textContent = data.cartCount;
                    }

                    // Cập nhật cart hover
                    const cartHover = document.querySelector('.cart-hover .select-items table tbody');
                    if (cartHover) {
                        // Kiểm tra xem sản phẩm đã tồn tại trong cart hover chưa
                        const existingItem = cartHover.querySelector(`tr[data-id="${data.addedItem.id}"]`);
                        
                        if (existingItem) {
                            // Nếu đã tồn tại, cập nhật số lượng
                            const quantityElement = existingItem.querySelector('.product-selected p');
                            if (quantityElement) {
                                quantityElement.textContent = `₫${data.addedItem.price}.00 x ${data.addedItem.quantity}`;
                            }
                        } else {
                            // Nếu chưa tồn tại, thêm mới
                            const newItemHTML = `
                                <tr data-id="${data.addedItem.id}">
                                    <td class="si-pic"><img src="/img/products/${data.addedItem.image}" alt=""></td>
                                    <td class="si-text">
                                        <div class="product-selected">
                                            <p>₫${data.addedItem.price}.00 x ${data.addedItem.quantity}</p>
                                            <h6>${data.addedItem.name}</h6>
                                        </div>
                                    </td>
                                    <td class="si-close">
                                        <i class="ti-close"></i>
                                    </td>
                                </tr>
                            `;
                            cartHover.insertAdjacentHTML('afterbegin', newItemHTML);
                        }
                        
                        // Cập nhật tổng tiền
                        const totalElement = document.querySelector('.select-total h5');
                        if (totalElement) {
                            totalElement.textContent = `₫${data.total}.00`;
                        }
                    }

                    // Hiển thị thông báo thành công
                    showToast('Product added to cart successfully!', 'success');
                } else {
                    showToast('Failed to add product to cart', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('Error adding product to cart', 'error');
            })
            .finally(() => {
                // Reset flag after request completes
                setTimeout(() => {
                    isAddingToCart = false;
                }, 1000); // Add 1 second delay before allowing next click
            });
        });
    });
});
</script>

<style>
.toast {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 15px 25px;
    border-radius: 4px;
    color: white;
    font-size: 14px;
    display: none;
    z-index: 1000;
    animation: slideIn 0.5s ease-in-out;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.toast.success {
    background-color: #4CAF50;
}

.toast.error {
    background-color: #f44336;
}

@keyframes slideIn {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}
</style> 